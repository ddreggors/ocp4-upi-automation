- name: Download the ova file
  get_url:
    url: "{{ download.ova }}"
    dest: "{{ playbook_dir }}/downloads/{{ vcenter.template_name }}.ova"
    validate_certs: no
  when: skip_ova is not defined

- name: Deploy the OVF template into the folder
  vmware_deploy_ovf:
    hostname: "{{ vcenter.ip }}"
    cluster: "{{ vcenter.cluster }}"
    username: "{{ vcenter.admin_username }}"
    password: "{{ vcenter.admin_password }}"
    datacenter: "{{ vcenter.datacenter }}"
    datastore: "{{ vcenter.datastore }}"
    folder: "{{ vcenter.template_folder }}"
    name: "{{ cluster }}-{{ vcenter.template_name }}"
    allow_duplicates: False
    disk_provisioning: thin
    networks: "{u'VM Network':u'{{ vcenter.network }}'}"
    ova: "{{ playbook_dir }}/downloads/{{ vcenter.template_name }}.ova"
    power_on: False
    validate_certs: False
  when: skip_ova is not defined

- name: Update VM options on the template
  command: "govc vm.change -vm '{{ vcenter.template_folder }}/{{ cluster }}-{{ vcenter.template_name }}' -e=disk.EnableUUID=TRUE -e=guestinfo.ignition.config.data.encoding=base64 -e=guestinfo.ignition.config.data='unset for template' -e=guestinfo.afterburn.initrd.network-kargs='unset for template'" # noqa 204
  when: skip_ova is not defined

- name: "Bootstrap base64"
  debug:
    msg: "{{ BootstrapContent }}"
    verbosity: 1

- name: Create Base 64 ignition for bootstrap
  copy:
    dest: "{{ playbook_dir }}/install-dir/bootstrap.ign.b64"
    content: "{{ BootstrapContent }}"

- name: "Master base64"
  debug:
    msg: "{{ masterContent }}"
    verbosity: 1

- name: Create Base 64 ignition for master
  copy:
    dest: "{{ playbook_dir }}/install-dir/master.ign.b64"
    content: "{{ masterContent }}"

- name: "Worker base64 "
  debug:
    msg: "{{ workerContent }}"
    verbosity: 1

- name: Create Base 64 ignition for worker
  copy:
    dest: "{{ playbook_dir }}/install-dir/worker.ign.b64"
    content: "{{ workerContent }}"

- name: Create bootstrap VM from the template
  vmware_guest:
    hostname: "{{ vcenter.ip }}"
    cluster: "{{ vcenter.cluster }}"
    username: "{{ service_account_username }}"
    password: "{{ service_account_password }}"
    datacenter: "{{ vcenter.datacenter }}"
    validate_certs: no
    folder: "{{ vcenter.folder_absolute_path }}"
    name: "{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}"
    state: poweredoff
    template: "{{ cluster}}-{{ vcenter.template_name }}"
    disk:
    - size_gb: "{{ item.size_gb }}"
      type: thin
      datastore: "{{ vcenter.datastore }}"
    hardware:
      memory_mb: "{{ item.ram }}"
      num_cpus: "{{ item.cpu }}"
      memory_reservation_lock: True
      version: "{{ vcenter.hw_version }}"
    wait_for_ip_address: no
    advanced_settings:
     - key: guestinfo.ignition.config.data
       value: "{{ BootstrapContent }}"
     - key: guestinfo.ignition.config.data.encoding
       value: base64
     - key: guestinfo.afterburn.initrd.network-kargs
       value: "ip={{ item.ipaddr }}::{{ static_ip.gateway }}:{{ static_ip.netmask }}:{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}:ens192:off:{{ static_ip.dns }}"
  loop: "{{ bootstrap_vms }}"

- name: Change network on bootstrap with MAC address
  command: "govc vm.network.change -vm '{{ vcenter.folder_absolute_path }}/{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}' -net.address {{ item.macaddr | default(omit) }} -net={{ vcenter.network }} ethernet-0"
  loop: "{{ bootstrap_vms }}"
  loop_control:
    label: "{{ item.name }}  - Network: {{ vcenter.network }} - MAC: {{ item.macaddr|default('N/A') }}"
  when: item.macaddr is defined

- name: Change network on bootstrap without MAC address
  command: "govc vm.network.change -vm '{{ vcenter.folder_absolute_path }}/{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}' -net={{ vcenter.network }} ethernet-0"
  loop: "{{ bootstrap_vms }}"
  loop_control:
    label: "{{ item.name }} - Network: {{ vcenter.network }}"
  when: item.macaddr is not defined

- name: Poweron bootstrap
  command: "govc vm.power -on {{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}"
  loop: "{{ bootstrap_vms }}"
  loop_control:
    label: "Power On {{ item.name }}"
  
- name: Create master VMs from their template
  vmware_guest:
    hostname: "{{ vcenter.ip }}"
    cluster: "{{ vcenter.cluster }}"
    username: "{{ service_account_username }}"
    password: "{{ service_account_password }}"
    datacenter: "{{ vcenter.datacenter }}"
    validate_certs: no
    folder: "{{ vcenter.folder_absolute_path }}"
    name: "{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}"
    state: poweredoff
    template: "{{ cluster}}-{{ vcenter.template_name }}"
    disk:
    - size_gb: "{{ item.size_gb }}"
      type: thin
      datastore: "{{ vcenter.datastore }}"
    hardware:
      memory_mb: "{{ item.ram }}"
      num_cpus: "{{ item.cpu }}"
      memory_reservation_lock: True
      version: "{{ vcenter.hw_version }}"
    wait_for_ip_address: no
    advanced_settings:
     - key: guestinfo.ignition.config.data
       value: "{{ masterContent }}"
     - key: guestinfo.ignition.config.data.encoding
       value: base64
     - key: guestinfo.afterburn.initrd.network-kargs
       value: "ip={{ item.ipaddr }}::{{ static_ip.gateway }}:{{ static_ip.netmask }}:{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}:ens192:off:{{ static_ip.dns }}"
  loop: "{{ master_vms }}"

- name: Change network on Masters with MAC address
  command: "govc vm.network.change -vm '{{ vcenter.folder_absolute_path }}/{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}' -net.address {{ item.macaddr | default(omit) }} -net={{ vcenter.network }} ethernet-0"
  loop: "{{ master_vms }}"
  loop_control:
    label: "{{ item.name }}  - Network: {{ vcenter.network }} - MAC: {{ item.macaddr | default('N/A') }}"
  when: item.macaddr is defined

- name: Change network on Masters without MAC address
  command: "govc vm.network.change -vm '{{ vcenter.folder_absolute_path }}/{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}' -net={{ vcenter.network }} ethernet-0"
  loop: "{{ master_vms }}"
  loop_control:
    label: "{{ item.name }}  - Network: {{ vcenter.network }}"
  when: item.macaddr is not defined

- name: Poweron master
  command: "govc vm.power -on {{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}"
  loop: "{{ master_vms }}"
  loop_control:
    label: "Power On {{ item.name }}"
  
- name: Create worker VMs from the template
  vmware_guest:
    hostname: "{{ vcenter.ip }}"
    cluster: "{{ vcenter.cluster }}"
    username: "{{ service_account_username }}"
    password: "{{ service_account_password }}"
    datacenter: "{{ vcenter.datacenter }}"
    validate_certs: no
    folder: "{{ vcenter.folder_absolute_path }}"
    name: "{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}"
    state: poweredoff
    template: "{{ cluster}}-{{ vcenter.template_name }}"
    disk:
    - size_gb: "{{ item.size_gb }}"
      type: thin
      datastore: "{{ vcenter.datastore }}"
    hardware:
      memory_mb: "{{ item.ram }}"
      num_cpus: "{{ item.cpu }}"
      memory_reservation_lock: True
      version: "{{ vcenter.hw_version }}"
    wait_for_ip_address: no
    advanced_settings:
     - key: guestinfo.ignition.config.data
       value: "{{ workerContent }}"
     - key: guestinfo.ignition.config.data.encoding
       value: base64
     - key: guestinfo.afterburn.initrd.network-kargs
       value: "ip={{ item.ipaddr }}::{{ static_ip.gateway }}:{{ static_ip.netmask }}:{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}:ens192:off:{{ static_ip.dns }}"
  loop: "{{ worker_vms }}"
 
- name: Change network on Workers with MAC address
  command: "govc vm.network.change -vm '{{ vcenter.folder_absolute_path }}/{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}' -net.address {{ item.macaddr | default(omit) }} -net={{ vcenter.network }} ethernet-0"
  loop: "{{ worker_vms }}"
  loop_control:
    label: "{{ item.name }}  - Network: {{ vcenter.network }} - MAC: {{ item.macaddr | default('N/A') }}"
  when: item.macaddr is defined

- name: Change network on Workers without MAC address
  command: "govc vm.network.change -vm '{{ vcenter.folder_absolute_path }}/{{ item.name }}.{{config.cluster_name}}.{{config.base_domain}}' -net={{ vcenter.network }} ethernet-0"
  loop: "{{ worker_vms }}"
  loop_control:
    label: "{{ item.name }}  - Network: {{ vcenter.network }}"
  when: item.macaddr is not defined

